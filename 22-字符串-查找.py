"""
find()
检查某个子串是否包含在这个字符串中，
如果在返回这个子串开始的下标，否则返回-1
"""
"""
语法
字符串序列.find(子串,开始位置下标,结束位置下标)
                       ^           ^
                       ^     区域中的结束位置
                  区域中的开始位置
"""

str1 = "hello my name is CX ,CX,Python"
#                 11111111111222222222
#       012345678901234567890123456789

print(str1.find("CX"))  # 17 打印最前面的那个子串
print(str1.find("CX", 0, 10))  # -1 因为下标0到下标10之间没有"CX"
print(str1.find("CX", 20, 23))  # 21 下标20到23之间的"CX"的位置是21

"""
index()
检查某个子串是否包含在这个字符串中，
如果在返回这个子串开始的下标，否则报异常
语法
    字符串序列.index(子串,开始位置下标,结束位置下标)
"""

'''
rfind()
和find功能相同，但查找方向是从右开始

rindex()
和index功能相同，但查找方向是从右开始
'''

"""
count()
返回某个子串在字符串中出现的次数
语法
    字符串序列.count(子串,开始位置下标,结束位置下标)
"""

str2 = "abc abc abc aaa abc def def def ghi ghi"
#       000000000011111111112222222222333333333
#       012345678901234567890123456789012345678

print()
print(str2.count('abc', 0, 11))
# 'abc'在下标0到下标11前出现了3次所以返回4
print(str2.count('abc'))
# 'abc'在str2中出现了4次所以返回4
